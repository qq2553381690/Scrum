<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="
                           http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                            
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-4.2.xsd 
                           
                           
                           http://www.springframework.org/schema/mvc 
                           http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                          ">
    <!-- 2.HandlerMapping 映射处理器/3.HandlerAdapter 适配器 -->
    <mvc:annotation-driven  conversion-service="conversionService" />
    
    <!-- 4.handler 业务处理器 UserController 处理核心业务逻辑，并返回对应的视图与数据模型(ModelAndView) -->
    <context:component-scan base-package="handler"/>
    <!--  <context:component-scan base-package="globalexceptionhandler"/> -->
    
    
    
    
    <!-- 5.ViewResolver 视图解析器(类名要求记住:InternalResourceViewResolver) -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
         <!-- 配置视图的位置 prefix:前缀 -->
         <property name="prefix" value="/WEB-INF/view/"/>
         <property name="suffix" value=".jsp"/>
         
         <!-- 6.View 具体的视图 -->
         <!-- <property name="viewClass" value=" org.springframework.web.servlet.view.JstlView"/> -->
    </bean>
    
    
    
    
    <!-- 访问WebRoot下的静态资源 -->
    <!-- <mvc:default-servlet-handler /> -->
    
    
    <!-- http://localhost:8080/SpringMVC/images/1.png -->
    <!-- <mvc:resources location="/" mapping="/**"/> -->
    
    <!-- SpringMVC框架中的静态资源能访问 -->
    <mvc:resources location="/js/" mapping="/js/**" />
    <mvc:resources location="/images/" mapping="/images/**" />
    
    <!-- <mvc:resources location="/WEB-INF/images/" mapping="/images/**"></mvc:resources>  -->
    
    <mvc:view-controller path="/showLogin" view-name="login" />  
    
    <!--<mvc:view-controller path="/jsonTest" view-name="jsonTest" />  -->
    
    <!--<mvc:view-controller path="*"/>  -->
    <!-- <mvc:view-controller path="/showForm" view-name="form"/> -->
    
    <!-- 
                 配置文件上传  
            1. id="multipartResolver" 不能变
            2. commons-fileupload.jar
               commons.jar
                              此时我们要重新部署我们的项目
            3.class只能时是  CommonsMultipartResolver    
            
            java.lang.OutOfMemoryError: PermGen space  内存溢出错误               
     -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- 限制要上传的文件的大小 :  100M -->
         <property name="maxUploadSize" value="104857600" />
         <!-- 防止中文乱码问题 -->
         <property name="defaultEncoding" value="utf-8" />
    </bean>
    
    <!--
    <mvc:interceptors>
    	<mvc:interceptor>
               <mvc:mapping path="/**" />
               <mvc:exclude-mapping path="/showUserLogin" />
               <mvc:exclude-mapping path="/login2" />
               <bean class="interceptor.CheckLoginInterceptor"></bean>
        </mvc:interceptor> 
   	</mvc:interceptors>
   	-->
    
    
    
    <!-- 
                注入new CustomDateEditor(new SimpleDateFormat("yyyy-MM-dd"), true)
               
                凡是new 类名();  ===> <bean class="new 对象的类全名">
        new 类名(参数); 这个参数                ===> constructor arg标签表示
                                                 这个参数的值         ===>  value标签表示
       constructor-arg标签表示参数
    -->
    <bean id="dateEditor" class="org.springframework.beans.propertyeditors.CustomDateEditor">
        <constructor-arg>
             <bean class="java.text.SimpleDateFormat">
                 <constructor-arg>
                     <value>yyyy-MM-dd</value>
                 </constructor-arg>
             </bean>
        </constructor-arg>
        
        <constructor-arg>
             <value>true</value>
        </constructor-arg>
    </bean>
   
   <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
              <list>
                   <bean class="converter.AddressToStringConverter" />
                   <bean class="converter.StringToAddressConverter" />
              </list>
        </property>
   </bean> 
   
   <!-- 用于将对象转换为 JSON   
	<bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">  
	    <property name="supportedMediaTypes">  
	        <list>  
	            <value>text/plain;charset=UTF-8</value>  
	        </list>  
	    </property>  
	</bean>  
	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>  
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
	    <property name="messageConverters">  
	        <list>  
	            <ref bean="stringConverter" />  
	            <ref bean="jsonConverter" />  
	        </list>  
	    </property>  
	</bean> 
	-->
</beans>
